@page "/add-student"
@using StudentManagement_Shared.Models
@rendermode InteractiveAuto
@inject NavigationManager navigation;
<h3>Add New Student</h3>
<hr/>
<div class="row">
    <div class="col-md-12">
        <EditForm Model="studobj" OnInvalidSubmit="CreateStudent" FormName="addstudent">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">First Name</label>
                            <InputText for="FirstName" class="form-control" @bind-Value="@studobj.FirstName"></InputText>
                            <ValidationMessage For="() => studobj.FirstName"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Middle Name</label>
                            <InputText for="MiddleName" class="form-control" @bind-Value="@studobj.MiddleName"></InputText>
                            <ValidationMessage For="() => studobj.MiddleName"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Last Name</label>
                            <InputText for="LastName" class="form-control" @bind-Value="@studobj.LastName"></InputText>
                            <ValidationMessage For="() => studobj.LastName"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Email Address</label>
                            <InputText for="EmailAddress" class="form-control" @bind-Value="@studobj.EmailAddress"></InputText>
                            <ValidationMessage For="() => studobj.EmailAddress"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Student Address</label>
                            <InputText for="Address" class="form-control" @bind-Value="@studobj.Address"></InputText>
                            <ValidationMessage For="() => studobj.Address"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Phone Number</label>
                            <InputText for="PhoneNumber" class="form-control" @bind-Value="@studobj.PhoneNumber"></InputText>
                            <ValidationMessage For="() => studobj.PhoneNumber"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Student Country</label>
                            <InputSelect for="Country" class="form-control" @bind-Value="@studobj.Country">
                                <option value="">Select Country</option>
                                @foreach (var country in Countries)
                                {
                                    <option value="@country.Name">@country.Name</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => studobj.Country"/>
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-primary" @onclick="CreateStudent">Save Student</button>
                        <button type="submit" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                    </div>
                </div>

            </div>

        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Student studobj { get; set; } = new();

    List<Country> Countries = new List<Country>();

    protected override async Task OnInitializedAsync()
    {
        Countries = await CountryService.GetAllCountriesAsync();
    }

    protected async Task CreateStudent()
    {
        var result = await StudentService.AddStudentAsync(studobj);
        Console.WriteLine("result:",result);
      
        navigation.NavigateTo("/students-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/students-list");
    }
}